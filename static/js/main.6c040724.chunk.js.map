{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","props","addMovieToList","useState","searchTitle","setSearchTitle","setMovie","isLoading","setIsLoading","isError","setIsError","onFindMovie","useCallback","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","Title","Plot","Poster","imdbID","finally","onAddToList","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","every","movieInList","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c040724.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC, useCallback, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  addMovieToList: (movie: Movie) => void;\n}\n\nexport const FindMovie: FC<Props> = (props) => {\n  const { addMovieToList } = props;\n  const [searchTitle, setSearchTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const onFindMovie = useCallback((event) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(searchTitle)\n      .then(response => {\n        if ('Error' in response) {\n          setIsError(true);\n        } else {\n          setMovie(\n            {\n              title: response.Title,\n              description: response.Plot,\n              imgUrl: response.Poster === 'N/A'\n                ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n                : response.Poster,\n              imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n              imdbId: response.imdbID,\n            },\n          );\n        }\n      })\n      .finally(() => setIsLoading(false));\n  }, [searchTitle]);\n\n  const onAddToList = useCallback(() => {\n    if (movie) {\n      addMovieToList(movie);\n    }\n\n    setSearchTitle('');\n    setMovie(null);\n  }, [addMovieToList, movie]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={event => onFindMovie(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchTitle}\n              onChange={(event) => {\n                setSearchTitle(event.target.value);\n                setIsError(false);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!searchTitle}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={onAddToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          {movie && <MovieCard movie={movie} />}\n        </div>\n      )}\n\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ResponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d6b4e114';\n// http://www.omdbapi.com/?i=tt3896198&apikey=d6b4e114\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovieToList = useCallback((movie) => {\n    if (movies.every(movieInList => movieInList.imdbId !== movie.imdbId)) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovieToList={addMovieToList}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}